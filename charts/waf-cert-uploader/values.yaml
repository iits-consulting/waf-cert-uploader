replicaCount: "2"

image:
  repository: "docker.io/waf-cert-uploader"
  pullPolicy: IfNotPresent
  #set global
  tag: "latest"


imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceNameShort: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext:
# fsGroup: 2000

securityContext:
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

serviceType: ClusterIP

ports:
  http:
    port: 443
    protocol: TCP

resources:
  requests:
    memory: 100M
    cpu: 10m

nodeSelector: { }

tolerations: [ ]

secretNames:
  serviceCert: &default_service_cert service-cert
  credentials: &default_credentials otc-auth-credentials

volumes:
  - name: service-cert
    secret:
      secretName: *default_service_cert
  - name: otc-auth-credentials
    secret:
      secretName: *default_credentials
volumeMounts:
  - name: service-cert
    readOnly: true
    mountPath: /etc/webhook/certs/
  - name: otc-auth-credentials
    readOnly: true
    mountPath: /etc/otc-auth-options/

affinity: { }

health:
  # override this if you want to change the healthcheck prefix otherwise it take serviceNameShort as the default
  prefix:
  liveness:
    path: "/"
    initialDelaySeconds: 20
    failureThreshold: 3
  readiness:
    path: "/"
    initialDelaySeconds: 20
    failureThreshold: 3

onePodForEachNode: true

otcAuth:
  otcDomainName: "REPLACE_ME"
  password: "REPLACE_ME"
  tenantName: "REPLACE_ME"
  username: "REPLACE_ME"
  accessKey: "REPLACE_ME"
  secretKey: "REPLACE_ME"